var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.28,1,0.612]],["body/injectables/ApiService.html",[0,1.736,1,0.83,2,2.607,3,0.515,4,0.515,5,0.43,6,2.082,7,0.515,8,1.301,9,2.695,10,1.301,11,3.554,12,3.554,13,3.554,14,3.554,15,0.954,16,2.607,17,4.344,18,1.521,19,3.554,20,1.982,21,0.057,22,1.486,23,0.83,24,1.718,25,3.554,26,3.554,27,2.607,28,5.013,29,1.664,30,4.042,31,3.554,32,2.607,33,3.554,34,4.344,35,2.607,36,3.554,37,3.256,38,2.607,39,3.554,40,2.607,41,1.273,42,0.954,43,0.954,44,3.554,45,0.859,46,0.43,47,0.351,48,1.737,49,0.954,50,1.479,51,1.737,52,1.737,53,2.082,54,1.737,55,0.515,56,0.515,57,0.954,58,2.579,59,2.607,60,2.607,61,2.607,62,2.607,63,2.607,64,0.027,65,0.037,66,0.027]],["title/components/AppComponent.html",[67,0.21,68,0.612]],["body/components/AppComponent.html",[3,0.607,4,0.607,5,0.506,7,0.607,8,1.45,18,0.972,21,0.056,22,1.255,23,0.717,41,1.498,42,1.124,43,1.124,45,0.607,46,0.506,47,0.413,54,2.639,55,0.607,56,0.607,64,0.032,65,0.042,66,0.032,67,0.352,68,1.083,69,1.45,70,1.297,71,1.297,72,1.297,73,1.297,74,2.451,75,1.297,76,1.855,77,1.605,78,1.45,79,4.387,80,1.45,81,3.961,82,4.387,83,1.934,84,1.39,85,3.164,86,3.164,87,3.069,88,0.972,89,1.674,90,1.45,91,1.297,92,1.958,93,1.297,94,1.297,95,1.297,96,0.607,97,1.297,98,0.607,99,1.297,100,0.607,101,1.297,102,0.607,103,1.297,104,1.297,105,1.297]],["title/modules/AppModule.html",[106,1.487,107,1.487]],["body/modules/AppModule.html",[1,1.064,3,0.468,4,0.468,5,0.391,21,0.056,45,1.043,46,0.391,47,0.613,48,1.578,49,0.867,50,1.344,51,1.578,55,0.468,56,0.468,64,0.025,65,0.035,66,0.025,68,1.172,77,0.75,88,0.75,96,0.901,98,0.901,100,0.901,102,0.901,106,1.344,107,2.992,108,1.157,109,1.344,110,3.071,111,3.071,112,3.071,113,1.578,114,1.892,115,1.892,116,1.892,117,1.892,118,1.892,119,2.224,120,2.224,121,2.657,122,1.892,123,1.892,124,2.369,125,2.657,126,3.327,127,2.657,128,1.578,129,2.657,130,2.369,131,2.369,132,3.327,133,3.327,134,1.344,135,1.892,136,1.892,137,1.892,138,1.892,139,3.327,140,2.369,141,3.327,142,2.369,143,3.327,144,2.369,145,2.369,146,1.001,147,3.327,148,3.327,149,3.327,150,2.369,151,2.369,152,2.369,153,3.327,154,2.369,155,3.327,156,2.369,157,3.327,158,2.369,159,3.327,160,2.369,161,3.327,162,2.369,163,3.327,164,2.369,165,2.369,166,2.369,167,2.369,168,1.578]],["title/modules/AppRoutingModule.html",[106,1.487,119,1.28]],["body/modules/AppRoutingModule.html",[3,0.677,4,0.677,5,0.565,21,0.055,45,1.013,46,0.565,47,0.461,48,2.281,49,1.253,50,1.942,55,0.677,56,0.677,64,0.036,65,0.045,66,0.036,67,0.398,96,0.839,98,0.839,100,0.839,102,0.912,108,1.671,113,2.281,119,2.073,125,2.734,129,3.391,135,2.734,136,2.734,137,2.734,138,2.734,169,3.423,170,3.423,171,2.618,172,4.245,173,1.671,174,1.942,175,4.959,176,1.942,177,2.281,178,2.281,179,2.734,180,3.423]],["title/components/ChatInboxComponent.html",[47,0.353,67,0.21]],["body/components/ChatInboxComponent.html",[1,0.762,3,0.209,4,0.209,5,0.175,7,0.209,8,0.652,10,0.652,15,0.388,18,1.444,20,1.378,21,0.057,22,1.153,23,0.914,24,1.194,29,1.432,37,1.534,41,1.849,42,0.988,43,0.988,45,0.534,46,0.175,47,0.363,49,1.685,55,0.352,56,0.209,57,0.388,58,0.6,64,0.011,65,0.019,66,0.011,67,0.185,68,0.247,69,0.652,70,0.447,71,0.447,72,0.447,73,0.447,75,0.447,76,1.333,77,1.153,78,0.652,80,0.652,83,0.869,84,1.396,88,0.335,89,0.752,90,0.988,91,0.447,92,1.14,93,0.447,94,0.447,95,0.447,96,0.209,97,0.447,98,0.209,99,0.447,100,0.209,101,0.447,102,0.209,103,0.447,104,0.447,105,0.447,146,0.447,174,1.708,176,0.6,181,3.066,182,0.705,183,0.652,184,0.973,185,1.01,186,1.839,187,1.422,188,1.78,189,1.839,190,1.839,191,1.839,192,1.592,193,1.78,194,2.156,195,1.14,196,2.156,197,1.78,198,1.78,199,1.78,200,2.156,201,1.78,202,2.156,203,1.78,204,1.534,205,1.839,206,1.534,207,1.85,208,0.6,209,1.78,210,2.006,211,1.058,212,2.065,213,1.058,214,1.058,215,1.058,216,1.058,217,1.799,218,1.058,219,1.6,220,1.058,221,1.058,222,1.058,223,1.058,224,1.058,225,1.058,226,1.058,227,1.422,228,1.777,229,1.058,230,1.058,231,1.422,232,1.058,233,1.058,234,1.058,235,1.058,236,1.058,237,1.058,238,1.422,239,1.058,240,0.846,241,2.173,242,0.846,243,0.846,244,0.705,245,0.846,246,0.846,247,0.517,248,0.869,249,1.839,250,0.846,251,1.422,252,1.422,253,1.422,254,0.846,255,0.846,256,0.846,257,1.422,258,0.846,259,0.846,260,0.846,261,0.846,262,0.846,263,0.846,264,0.846,265,1.422,266,0.846,267,0.846,268,0.846,269,1.422,270,1.422,271,1.422,272,1.422,273,1.422,274,0.846,275,0.846,276,2.405,277,1.422,278,1.839,279,1.422,280,1.422,281,3.472,282,1.422,283,2.156,284,1.422,285,1.422,286,1.422,287,2.156,288,2.156,289,1.422,290,1.422,291,1.422,292,1.422,293,0.752,294,1.422,295,1.422,296,1.422,297,1.422,298,1.422,299,1.422,300,1.422,301,1.422,302,1.422,303,1.422,304,1.422,305,0.846,306,1.422,307,1.422,308,1.422,309,1.422,310,3.418,311,1.422,312,1.01,313,0.846,314,1.422,315,1.422,316,1.422,317,2.156,318,1.422,319,1.422,320,1.839,321,1.422,322,0.846,323,1.839,324,0.846,325,0.846,326,0.846,327,1.422,328,1.839,329,0.705,330,0.846,331,0.846,332,0.846,333,0.846,334,0.846,335,0.846,336,0.846,337,0.846,338,1.422,339,0.846,340,1.422,341,2.065,342,1.422,343,1.422,344,1.839,345,0.846,346,0.846,347,0.869,348,0.846,349,0.846,350,0.846,351,0.846,352,0.846,353,0.846,354,0.846,355,0.846,356,1.78,357,1.78,358,1.799,359,1.186,360,2.699,361,2.303,362,2.303,363,2.303,364,2.699,365,1.058,366,1.78,367,1.839,368,0.846,369,0.846,370,1.058,371,1.78,372,2.303,373,2.303,374,1.78,375,1.78,376,1.78,377,1.058,378,1.058,379,1.186,380,2.156,381,3.261,382,1.534,383,1.058,384,1.01,385,1.422,386,2.156,387,1.058,388,1.058,389,1.058,390,1.058,391,1.78,392,1.058,393,1.058,394,0.846,395,1.78,396,1.186,397,0.846,398,1.058,399,1.058,400,1.058,401,1.058,402,0.6,403,1.058,404,2.699,405,1.422,406,1.058,407,0.846,408,0.846,409,1.058,410,1.058,411,1.78,412,1.058,413,1.78,414,1.058,415,1.058,416,1.058]],["title/interfaces/IMessage.html",[228,1.28,247,1.28]],["body/interfaces/IMessage.html",[1,0.742,3,0.338,4,0.338,5,0.281,7,0.338,8,0.957,21,0.058,23,0.742,24,0.957,37,1.137,41,1.978,45,0.704,46,0.281,47,0.23,49,0.625,55,0.517,56,0.338,57,0.625,58,0.968,64,0.018,65,0.027,66,0.018,67,0.21,76,0.625,77,0.541,78,0.625,80,0.625,83,0.833,84,1.007,90,0.957,146,0.721,174,2.179,176,0.968,181,1.137,182,1.137,183,0.625,184,1.105,185,0.968,186,1.363,187,1.363,189,1.363,190,1.363,191,1.363,192,1.277,194,1.363,195,0.721,196,1.363,200,1.363,202,1.363,204,1.137,205,1.363,206,1.137,207,2.392,210,2.117,212,2.298,217,1.137,219,0.721,227,1.363,228,1.875,231,1.363,238,1.363,240,1.363,241,2.559,242,1.363,243,1.363,244,1.137,245,1.363,246,1.363,247,0.833,248,1.739,249,3.236,250,2.539,251,2.088,252,2.088,253,2.088,254,1.363,255,1.363,256,1.363,257,2.088,258,1.363,259,1.363,260,1.363,261,1.363,262,1.363,263,1.363,264,1.363,265,2.088,266,1.363,267,1.363,268,1.363,269,2.088,270,2.088,271,2.088,272,2.088,273,2.088,274,1.363,275,1.363,276,2.539,277,2.088,278,2.088,279,2.088,280,2.088,281,3.562,282,2.088,283,2.539,284,2.088,285,2.088,286,2.088,287,2.845,288,2.845,289,2.088,290,2.088,291,2.088,292,2.088,293,1.105,294,2.088,295,2.088,296,2.088,297,2.088,298,2.088,299,2.088,300,2.088,301,2.088,302,2.088,303,2.088,304,2.088,305,1.363,306,2.088,307,2.088,308,2.088,309,2.088,310,3.236,311,2.088,312,1.483,313,1.363,314,2.088,315,2.088,316,2.088,317,2.845,318,2.088,319,2.088,320,2.539,321,2.088,322,1.363,323,2.539,324,1.363,325,1.363,326,1.363,327,2.088,328,2.539,329,1.137,330,1.363,331,1.363,332,1.363,333,1.363,334,1.363,335,1.363,336,1.363,337,1.363,338,2.088,339,1.363,340,2.088,341,1.483,342,2.088,343,2.088,344,1.363,345,1.363,346,1.363,347,1.277,348,1.363,349,1.363,350,1.363,351,1.363,352,1.363,353,1.363,354,1.363,355,1.363,417,1.707]],["title/components/LoginComponent.html",[67,0.21,96,0.518]],["body/components/LoginComponent.html",[1,1.057,3,0.459,4,0.459,5,0.383,7,0.459,8,1.2,10,1.2,15,0.849,18,1.381,20,1.385,21,0.056,22,1.381,23,0.542,24,1.2,29,1.392,42,0.849,43,0.849,45,0.817,46,0.383,47,0.312,55,0.459,56,0.459,57,0.849,64,0.024,65,0.034,66,0.024,67,0.305,68,0.542,69,1.2,70,0.98,71,0.98,72,0.98,73,0.98,75,0.98,76,1.739,77,1.505,78,1.2,80,1.2,84,0.735,88,0.735,89,1.385,90,1.2,91,0.98,92,1.746,93,0.98,94,0.98,95,0.98,96,0.817,97,0.98,98,0.459,99,0.98,100,0.459,101,0.98,102,0.459,103,0.98,104,0.98,105,0.98,134,1.316,146,0.98,173,1.133,178,3.165,183,1.2,184,1.606,192,1.856,195,1.746,207,2.344,208,1.316,219,1.606,248,1.133,293,1.911,347,1.133,379,2.533,384,1.316,402,1.86,418,1.853,419,3.802,420,3.278,421,3.802,422,3.301,423,2.533,424,2.753,425,2.32,426,2.32,427,3.614,428,2.32,429,2.32,430,2.32,431,3.037,432,3.482,433,2.32,434,2.32,435,1.853,436,2.32,437,2.32,438,2.32,439,2.32,440,2.32,441,2.32,442,2.32,443,2.32,444,2.32,445,2.619,446,1.853,447,1.853,448,1.853,449,1.853,450,1.546,451,1.853,452,1.853,453,1.853,454,1.853]],["title/components/ProfileComponent.html",[67,0.21,98,0.518]],["body/components/ProfileComponent.html",[1,0.874,3,0.279,4,0.279,5,0.233,7,0.279,8,0.825,9,1.874,10,0.825,15,0.517,18,1.551,20,1.482,21,0.057,22,1.42,23,1.063,24,1.285,29,1.539,41,1.991,42,1.539,43,1.539,45,0.635,46,0.233,47,0.19,49,0.517,50,0.8,55,0.279,56,0.279,57,0.517,64,0.015,65,0.024,66,0.015,67,0.226,68,0.33,69,0.825,70,0.596,71,0.596,72,0.596,73,0.596,75,0.596,76,1.493,77,1.395,78,0.825,80,0.825,84,1.292,88,0.447,89,0.952,90,0.825,91,0.596,92,1.356,93,0.596,94,0.596,95,0.596,96,0.279,97,0.596,98,0.635,99,0.596,100,0.279,101,0.596,102,0.279,103,0.596,104,0.596,105,0.596,146,0.596,168,1.501,173,0.689,179,1.8,183,0.825,184,1.188,185,1.595,192,2.188,195,1.356,204,1.874,206,1.874,208,0.8,210,2.801,212,1.821,217,1.501,219,1.58,228,0.689,241,0.94,248,1.373,293,1.356,312,0.8,329,1.501,341,1.278,347,1.373,358,1.501,359,1.501,367,1.127,368,1.127,369,1.127,382,0.94,384,1.278,385,1.127,386,2.565,394,1.8,396,0.94,397,1.127,402,0.8,405,2.246,407,1.127,408,1.127,423,1.874,424,2.139,435,1.127,450,0.94,455,1.127,456,2.812,457,2.253,458,3.509,459,2.812,460,2.246,461,2.812,462,3.741,463,2.812,464,3.509,465,2.812,466,3.211,467,2.253,468,2.253,469,2.253,470,3.211,471,2.253,472,3.741,473,3.211,474,2.253,475,1.411,476,1.411,477,1.411,478,1.411,479,1.411,480,2.253,481,1.411,482,2.253,483,1.411,484,2.253,485,1.411,486,1.411,487,1.411,488,1.411,489,1.411,490,1.411,491,1.411,492,2.253,493,2.253,494,2.253,495,1.411,496,1.411,497,2.253,498,1.411,499,3.211,500,1.411,501,1.411,502,1.411,503,1.411,504,3.211,505,1.411,506,1.411,507,1.411,508,1.411,509,1.411,510,1.411,511,2.253,512,1.411,513,1.411,514,1.411,515,1.127,516,1.411,517,1.411,518,1.411,519,2.253,520,1.411,521,1.411,522,1.411,523,2.253,524,1.411,525,1.411,526,2.253,527,2.253,528,2.253,529,2.253,530,2.253,531,2.253,532,2.253,533,2.253,534,2.253,535,1.411,536,2.253,537,2.253,538,1.411,539,1.411,540,1.411,541,1.411,542,2.253,543,1.411,544,1.411,545,1.411,546,1.411,547,1.411,548,1.411,549,1.411,550,1.411,551,1.411,552,2.253,553,1.411,554,2.253,555,2.246,556,2.246,557,2.565,558,2.812,559,1.411,560,2.812,561,1.411,562,1.411,563,1.411,564,1.411,565,1.411,566,1.411,567,1.411]],["title/components/RegistrationComponent.html",[67,0.21,100,0.518]],["body/components/RegistrationComponent.html",[1,1.023,3,0.465,4,0.465,5,0.388,7,0.465,8,1.211,10,1.211,15,0.861,18,1.388,20,1.398,21,0.056,22,1.479,23,0.549,24,1.211,29,1.402,42,0.861,43,0.861,45,0.822,46,0.388,47,0.316,55,0.465,56,0.465,57,0.861,64,0.025,65,0.035,66,0.025,67,0.307,68,0.549,69,1.211,70,0.993,71,0.993,72,0.993,73,0.993,75,0.993,76,1.745,77,1.51,78,1.211,80,1.211,84,0.745,88,0.745,89,1.398,90,1.211,91,0.993,92,1.756,93,0.993,94,0.993,95,0.993,96,0.465,97,0.993,98,0.465,99,0.993,100,0.822,101,0.993,102,0.465,103,0.993,104,0.993,105,0.993,134,1.334,146,0.993,173,1.148,177,3.027,183,1.211,184,1.618,192,1.87,195,1.756,207,1.877,208,1.334,219,1.618,248,1.148,293,1.92,347,1.148,379,2.551,384,1.334,402,1.877,422,3.32,423,2.551,424,2.769,427,3.629,431,3.059,432,3.499,445,2.643,446,1.878,447,1.878,448,1.878,449,1.878,450,1.566,451,1.878,452,1.878,453,1.878,454,1.878,515,1.878,568,1.878,569,3.829,570,3.309,571,3.829,572,2.351,573,2.351,574,2.351,575,2.351,576,2.351,577,2.351,578,2.351,579,2.351,580,2.351,581,2.351,582,2.351,583,2.351,584,3.309]],["title/components/TesztComponent.html",[67,0.21,102,0.518]],["body/components/TesztComponent.html",[3,0.539,4,0.539,5,0.45,7,0.539,9,2.758,10,1.341,15,1.515,18,1.161,21,0.056,22,1.161,29,0.998,45,0.539,46,0.45,47,0.367,55,0.539,56,0.539,64,0.029,65,0.038,66,0.029,67,0.332,68,0.637,69,1.341,70,1.152,71,1.152,72,1.152,73,1.152,75,1.152,76,1.808,77,1.616,78,1.341,80,1.341,84,1.539,88,0.864,89,1.548,90,1.341,91,1.152,92,1.87,93,1.152,94,1.152,95,1.152,96,0.539,97,1.152,98,0.539,99,1.152,100,0.539,101,1.152,102,0.875,103,1.749,104,1.152,105,1.152,177,1.817,178,1.817,183,1.341,184,1.749,185,2.348,195,1.87,219,1.548,312,2.348,341,2.079,358,2.441,359,2.441,382,1.817,396,1.817,555,3.306,556,3.306,557,3.306,585,2.178,586,4.139,587,3.664,588,2.726,589,2.726,590,2.726,591,4.139,592,2.726,593,2.726,594,2.726,595,2.726]],["title/interceptors/TokenInterceptorService.html",[120,1.28,596,2.094]],["body/interceptors/TokenInterceptorService.html",[0,1.972,3,0.625,4,0.625,5,0.522,7,0.625,10,1.478,15,1.158,18,1.279,20,1.706,21,0.057,22,1.279,23,0.943,24,1.478,29,1.158,30,3.554,45,0.88,46,0.522,51,2.107,52,2.107,53,2.526,54,2.107,55,0.625,56,0.625,57,1.158,58,1.794,64,0.033,65,0.042,66,0.033,120,1.972,174,1.794,183,1.158,597,3.162,598,3.554,599,2.526,600,4.038,601,3.162,602,4.953,603,3.162,604,4.038,605,4.688,606,4.449,607,4.688,608,3.162,609,3.162,610,3.162,611,4.038,612,3.162,613,3.162,614,3.162,615,3.162,616,3.162,617,3.162,618,3.162]],["title/coverage.html",[619,2.85]],["body/coverage.html",[0,1.618,1,0.774,5,0.546,6,2.647,21,0.056,23,0.774,47,0.446,49,1.523,64,0.035,65,0.044,66,0.035,67,0.402,68,0.774,74,2.647,96,0.655,98,0.655,100,0.655,102,0.655,120,1.618,181,2.772,182,2.772,228,1.618,247,1.618,293,1.4,380,4.2,418,2.647,455,2.647,568,2.647,585,2.647,596,2.647,598,2.647,599,2.647,619,2.647,620,3.314,621,3.314,622,3.314,623,3.314,624,3.314,625,3.314,626,4.16,627,3.314,628,4.16,629,3.314,630,2.647,631,4.16,632,3.323,633,4.16,634,2.647,635,3.314,636,3.314]],["title/dependencies.html",[109,1.787,637,2.194]],["body/dependencies.html",[21,0.057,46,0.571,52,2.306,64,0.036,65,0.045,66,0.036,109,1.963,127,3.414,128,2.848,134,1.963,173,1.69,176,1.963,244,2.848,638,3.461,639,3.461,640,3.461,641,4.274,642,3.461,643,5.135,644,3.461,645,3.461,646,3.461,647,3.461,648,4.274,649,4.274,650,3.461,651,3.461,652,3.461,653,3.461,654,3.461,655,3.461,656,4.274,657,3.461,658,3.461,659,3.461,660,3.461]],["title/index.html",[7,0.434,661,2.194,662,2.194]],["body/index.html",[21,0.05,64,0.044,65,0.05,66,0.044,83,2.028,84,1.316,85,3.318,86,3.318]],["title/modules.html",[108,1.742]],["body/modules.html",[21,0.049,64,0.043,65,0.049,66,0.043,83,1.988,107,2.31,108,1.988,119,1.988,128,2.713,460,3.253,663,4.072,664,4.71,665,4.072]],["title/overview.html",[666,2.85]],["body/overview.html",[0,1.58,1,1.051,21,0.055,47,0.605,64,0.034,65,0.043,66,0.034,68,1.182,69,1.185,88,1.025,96,0.889,98,0.889,100,0.889,102,0.889,106,1.836,107,3.063,108,1.58,109,1.836,110,2.585,111,2.585,112,2.585,113,2.156,114,2.585,115,2.585,116,2.585,117,2.585,118,2.585,119,2.196,120,2.196,121,3.274,122,2.585,123,2.585,171,1.836,247,1.58,666,2.585,667,3.236,668,3.236,669,4.098,670,3.236]],["title/routes.html",[171,2.024]],["body/routes.html",[21,0.05,64,0.044,65,0.05,66,0.044,171,2.38]],["title/miscellaneous/variables.html",[671,1.752,672,2.516]],["body/miscellaneous/variables.html",[7,0.754,21,0.056,23,1.058,42,1.659,43,1.659,64,0.04,65,0.048,66,0.04,168,2.539,212,2.162,630,3.044,632,3.996,634,3.044,671,3.044,672,3.044,673,3.81,674,3.81,675,4.53,676,4.53]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":380,"title":{},"body":{"components/ChatInboxComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":414,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["0.3s",{"_index":547,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.8",{"_index":307,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["0/1",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["0d47a1",{"_index":398,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["0f5298",{"_index":274,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["0px",{"_index":310,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["1",{"_index":669,"title":{},"body":{"overview.html":{}}}],["1.1.3",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["10.2.5",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":262,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["100px",{"_index":411,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["10px",{"_index":281,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["12px",{"_index":300,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["13px",{"_index":305,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["15px",{"_index":278,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["2",{"_index":667,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":404,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["255",{"_index":413,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["25px",{"_index":392,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["2px",{"_index":401,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["30px",{"_index":279,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["3px",{"_index":302,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["4.0.1",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":365,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["40px",{"_index":403,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["5",{"_index":670,"title":{},"body":{"overview.html":{}}}],["50px",{"_index":395,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["55",{"_index":540,"title":{},"body":{"components/ProfileComponent.html":{}}}],["6",{"_index":668,"title":{},"body":{"overview.html":{}}}],["6.2.2",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["6px",{"_index":374,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["70",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["70px",{"_index":383,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["8px",{"_index":303,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["absolute",{"_index":312,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["action1','action2",{"_index":494,"title":{},"body":{"components/ProfileComponent.html":{}}}],["activate",{"_index":458,"title":{},"body":{"components/ProfileComponent.html":{}}}],["activatedroute",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{}}}],["actual_component",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["align",{"_index":405,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["align:center",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["angular/animations",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["angular/compiler",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/util",{"_index":246,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["angular/core",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apiservice,private",{"_index":579,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["app",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["app.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":68,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":107,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":119,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":416,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["asd123",{"_index":497,"title":{},"body":{"components/ProfileComponent.html":{}}}],["assistance",{"_index":531,"title":{},"body":{"components/ProfileComponent.html":{}}}],["assistanceneeded",{"_index":459,"title":{},"body":{"components/ProfileComponent.html":{}}}],["assistanceneeded:this.assistanceneeded}).topromise",{"_index":525,"title":{},"body":{"components/ProfileComponent.html":{}}}],["async",{"_index":192,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["auto",{"_index":371,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["available",{"_index":460,"title":{},"body":{"components/ProfileComponent.html":{},"modules.html":{}}}],["await",{"_index":347,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["b0b0b0",{"_index":297,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["b2b2b2",{"_index":375,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["back",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["background",{"_index":362,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["bearer",{"_index":616,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["body",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["boolean",{"_index":234,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["bootstrap",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":360,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["bottom",{"_index":400,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["box",{"_index":372,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["break",{"_index":287,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["browse",{"_index":664,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":390,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["card",{"_index":448,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["cell",{"_index":554,"title":{},"body":{"components/ProfileComponent.html":{}}}],["center",{"_index":386,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["changeactivation",{"_index":466,"title":{},"body":{"components/ProfileComponent.html":{}}}],["changeassistancestatus",{"_index":467,"title":{},"body":{"components/ProfileComponent.html":{}}}],["changeassistancestatus(roomname",{"_index":476,"title":{},"body":{"components/ProfileComponent.html":{}}}],["changeassistancestatus(roomname:string",{"_index":522,"title":{},"body":{"components/ProfileComponent.html":{}}}],["changeroomevent",{"_index":204,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{}}}],["changestatus",{"_index":468,"title":{},"body":{"components/ProfileComponent.html":{}}}],["changestatus(roomname",{"_index":478,"title":{},"body":{"components/ProfileComponent.html":{}}}],["changestatus(roomname:string",{"_index":518,"title":{},"body":{"components/ProfileComponent.html":{}}}],["chat",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"index.html":{}}}],["chat:hover",{"_index":409,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["chat_bubble_outline",{"_index":357,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["chatinboxcomponent",{"_index":47,"title":{"components/ChatInboxComponent.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["client",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"dependencies.html":{}}}],["closeroom",{"_index":469,"title":{},"body":{"components/ProfileComponent.html":{}}}],["closeroom(socketid",{"_index":480,"title":{},"body":{"components/ProfileComponent.html":{}}}],["cluster_appmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":397,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["color:#0f5298",{"_index":393,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["color:red",{"_index":549,"title":{},"body":{"components/ProfileComponent.html":{}}}],["color:white",{"_index":399,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["column",{"_index":369,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["component",{"_index":67,"title":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["components",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"overview.html":{}}}],["components/chat",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/profile/profile.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/registration/registration.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/teszt/teszt.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console.log(result",{"_index":444,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(apiservice",{"_index":208,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["constructor(http",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(injector",{"_index":601,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["constructor(private",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["contact_support",{"_index":532,"title":{},"body":{"components/ProfileComponent.html":{}}}],["contacticon:hover",{"_index":550,"title":{},"body":{"components/ProfileComponent.html":{}}}],["container",{"_index":359,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["content",{"_index":385,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["content:center",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["cors",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":619,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":382,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["created",{"_index":533,"title":{},"body":{"components/ProfileComponent.html":{}}}],["createdat",{"_index":493,"title":{},"body":{"components/ProfileComponent.html":{}}}],["cursor",{"_index":407,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["cursor:pointer",{"_index":394,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["dashcasetocamelcase",{"_index":245,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["data",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["data.text",{"_index":272,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["data.username",{"_index":334,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["date",{"_index":250,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["date(data.time).gethours().tostring()+\":\"+new",{"_index":294,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["date(data.time).getminutes().tostring",{"_index":295,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["date:'short",{"_index":535,"title":{},"body":{"components/ProfileComponent.html":{}}}],["date:\\'short",{"_index":567,"title":{},"body":{"components/ProfileComponent.html":{}}}],["declarations",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["deep",{"_index":556,"title":{},"body":{"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["default",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["del",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["del(endpoint",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{}}}],["delete_forever",{"_index":537,"title":{},"body":{"components/ProfileComponent.html":{}}}],["deleteicon",{"_index":541,"title":{},"body":{"components/ProfileComponent.html":{}}}],["deleteicon:hover",{"_index":545,"title":{},"body":{"components/ProfileComponent.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["direction",{"_index":368,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["directive",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["directives",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["display",{"_index":366,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["displayedcolumns",{"_index":461,"title":{},"body":{"components/ProfileComponent.html":{}}}],["document.createelement('div",{"_index":289,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["document.createelement('li",{"_index":270,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["document.getelementbyid('message",{"_index":320,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["documentation",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["dynamic",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["e8e8e8",{"_index":322,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["ease",{"_index":548,"title":{},"body":{"components/ProfileComponent.html":{}}}],["el",{"_index":342,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["el.style.display",{"_index":343,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["element.addeventlistener(\"mouseenter",{"_index":290,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.addeventlistener(\"mouseout",{"_index":316,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.appendchild(time",{"_index":315,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.createdat",{"_index":534,"title":{},"body":{"components/ProfileComponent.html":{}}}],["element.innerhtml",{"_index":271,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.name",{"_index":526,"title":{},"body":{"components/ProfileComponent.html":{}}}],["element.newmessages",{"_index":528,"title":{},"body":{"components/ProfileComponent.html":{}}}],["element.participants",{"_index":529,"title":{},"body":{"components/ProfileComponent.html":{}}}],["element.removechild(time",{"_index":319,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.style.background",{"_index":273,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.style.borderradius",{"_index":284,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.style.color",{"_index":275,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.style.float",{"_index":285,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.style.margin",{"_index":280,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.style.padding",{"_index":277,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.style.textalign",{"_index":282,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["element.style.wordbreak",{"_index":286,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["elementref",{"_index":240,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["endpoint",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eva",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["event",{"_index":318,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["eventemitter",{"_index":210,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{}}}],["export",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["exports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":212,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["fixed",{"_index":558,"title":{},"body":{"components/ProfileComponent.html":{}}}],["flex",{"_index":367,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["flex:2",{"_index":389,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["font",{"_index":542,"title":{},"body":{"components/ProfileComponent.html":{}}}],["foreach.call(document.queryselectorall('.chat",{"_index":340,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["formcontrol",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["formgroup",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["formsmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["function",{"_index":317,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["function(event",{"_index":291,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["get(endpoint",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroommessages",{"_index":193,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["getroommessages(roomname",{"_index":215,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["getroommessages(roomname:string",{"_index":354,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["getrooms",{"_index":470,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getting",{"_index":661,"title":{"index.html":{}},"body":{}}],["graph",{"_index":665,"title":{},"body":{"modules.html":{}}}],["guest",{"_index":351,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["header",{"_index":553,"title":{},"body":{"components/ProfileComponent.html":{}}}],["height",{"_index":364,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["hide",{"_index":396,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["host",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["html",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["http",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:3000",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{}}}],["http_interceptors",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":610,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httphandler",{"_index":607,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpinterceptor",{"_index":611,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httprequest",{"_index":605,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["icon",{"_index":415,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["icons",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["if(!this.issupport",{"_index":254,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["if(message.messages.username",{"_index":350,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["if(result?.token",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.isshown",{"_index":339,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["if(this.issupport",{"_index":265,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["if(this.messageinput",{"_index":267,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["imessage",{"_index":228,"title":{"interfaces/IMessage.html":{}},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["implements",{"_index":183,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["import",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["important",{"_index":462,"title":{},"body":{"components/ProfileComponent.html":{}}}],["importanticon:hover",{"_index":551,"title":{},"body":{"components/ProfileComponent.html":{}}}],["imports",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["inbox",{"_index":185,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["inbox'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["inbox.component",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProfileComponent.html":{}}}],["inbox.component.css",{"_index":186,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["inbox.component.html",{"_index":187,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["inbox.component.ts",{"_index":182,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"coverage.html":{}}}],["inbox.component.ts:111",{"_index":232,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:146",{"_index":223,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:163",{"_index":235,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:164",{"_index":230,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:177",{"_index":218,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:181",{"_index":226,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:192",{"_index":216,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:20",{"_index":239,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:21",{"_index":237,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:22",{"_index":236,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:25",{"_index":211,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:28",{"_index":213,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:31",{"_index":214,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:34",{"_index":209,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:39",{"_index":220,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:58",{"_index":233,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:66",{"_index":221,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox.component.ts:74",{"_index":229,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inbox/chat",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{}}}],["injector",{"_index":602,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["input",{"_index":241,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{}}}],["inputs",{"_index":203,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["inset",{"_index":410,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["intercept",{"_index":600,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(req",{"_index":604,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor",{"_index":596,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":599,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:10",{"_index":608,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:7",{"_index":603,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptors",{"_index":597,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interface",{"_index":247,"title":{"interfaces/IMessage.html":{}},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":417,"title":{},"body":{"interfaces/IMessage.html":{}}}],["io",{"_index":243,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["io(this.socket_endpoint",{"_index":252,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["isavailable:this.available}).topromise",{"_index":513,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isimportant:this.important}).topromise",{"_index":521,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isshown",{"_index":188,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["isshown:boolean",{"_index":337,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["issupport",{"_index":205,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["issupport:this.issupport",{"_index":332,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["issupport:this.issupport,supportid",{"_index":330,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["items",{"_index":406,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["join",{"_index":536,"title":{},"body":{"components/ProfileComponent.html":{}}}],["joinroom",{"_index":471,"title":{},"body":{"components/ProfileComponent.html":{}}}],["joinroom(socketid",{"_index":484,"title":{},"body":{"components/ProfileComponent.html":{}}}],["justify",{"_index":384,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["leave",{"_index":194,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["left",{"_index":323,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["left:15px",{"_index":387,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["left:auto",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["legend",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"overview.html":{}}}],["list",{"_index":376,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["list').appendchild(element",{"_index":321,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["list').innerhtml",{"_index":326,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["localhost:3000",{"_index":238,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["localstorage.getitem(\"supportid",{"_index":331,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["localstorage.getitem(\"token",{"_index":617,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["localstorage.setitem(\"supportid\",result?.supportid",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem(\"token",{"_index":514,"title":{},"body":{"components/ProfileComponent.html":{}}}],["localstorage.setitem(\"token\",result?.token",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/TesztComponent.html":{}}}],["login'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["login(name",{"_index":426,"title":{},"body":{"components/LoginComponent.html":{}}}],["login(name,password",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":419,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":420,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":96,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":421,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginregistration",{"_index":595,"title":{},"body":{"components/TesztComponent.html":{}}}],["logout",{"_index":472,"title":{},"body":{"components/ProfileComponent.html":{}}}],["logoutbtn",{"_index":563,"title":{},"body":{"components/ProfileComponent.html":{}}}],["margin",{"_index":379,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["margin:25px",{"_index":539,"title":{},"body":{"components/ProfileComponent.html":{}}}],["margin:auto",{"_index":590,"title":{},"body":{"components/TesztComponent.html":{}}}],["mat",{"_index":552,"title":{},"body":{"components/ProfileComponent.html":{}}}],["matbuttonmodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["message(s",{"_index":527,"title":{},"body":{"components/ProfileComponent.html":{}}}],["messageinput",{"_index":189,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["messages",{"_index":341,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["messages.foreach((message",{"_index":349,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["messages:any",{"_index":346,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["metadata",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["methods",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["miscellaneous",{"_index":671,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":106,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["mytable",{"_index":538,"title":{},"body":{"components/ProfileComponent.html":{}}}],["name",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["name','newmessages','participants','important','helpneeded",{"_index":492,"title":{},"body":{"components/ProfileComponent.html":{}}}],["nebular/eva",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["nebular/theme",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":293,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["newmessage",{"_index":463,"title":{},"body":{"components/ProfileComponent.html":{}}}],["newroomevent",{"_index":206,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{}}}],["next",{"_index":606,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["next.handle(tokenizedreq",{"_index":618,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["ng",{"_index":555,"title":{},"body":{"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["ngmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":195,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["none",{"_index":344,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["number",{"_index":499,"title":{},"body":{"components/ProfileComponent.html":{}}}],["object",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["oninit",{"_index":184,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["onsubmit",{"_index":422,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["optional",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["outline",{"_index":388,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["overflow",{"_index":370,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["overview",{"_index":666,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":637,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":381,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["param",{"_index":264,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["participants",{"_index":464,"title":{},"body":{"components/ProfileComponent.html":{}}}],["password",{"_index":427,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["patch",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["patch(endpoint",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pointer",{"_index":408,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{}}}],["position",{"_index":557,"title":{},"body":{"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["post",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{}}}],["post(endpoint",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["private",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["production",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["profile.component.css",{"_index":456,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":457,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":98,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"coverage.html":{},"overview.html":{}}}],["properties",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["provide",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["providers",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["put",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(endpoint",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{}}}],["radius",{"_index":361,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["reactiveformsmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["register",{"_index":584,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["registration'},{'name",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["registration(name",{"_index":575,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration(name,password",{"_index":582,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.css",{"_index":569,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":570,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":100,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationform",{"_index":571,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["req",{"_index":609,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["req.clone",{"_index":613,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["res",{"_index":510,"title":{},"body":{"components/ProfileComponent.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"interceptors/TokenInterceptorService.html":{}}}],["returns",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["rgba(255",{"_index":412,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["right",{"_index":283,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["right:20",{"_index":560,"title":{},"body":{"components/ProfileComponent.html":{}}}],["right:45",{"_index":591,"title":{},"body":{"components/TesztComponent.html":{}}}],["right:7",{"_index":564,"title":{},"body":{"components/ProfileComponent.html":{}}}],["right:auto",{"_index":452,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["room",{"_index":329,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{}}}],["roomname",{"_index":217,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{}}}],["rooms",{"_index":465,"title":{},"body":{"components/ProfileComponent.html":{}}}],["root",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["root'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["route",{"_index":423,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["router",{"_index":424,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["routermodule",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":171,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["selector",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["send",{"_index":356,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["sendmessage",{"_index":196,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["service",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["services/api.service",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["services/token",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["setheaders",{"_index":614,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["settimeout(()=>{this.getrooms()},100",{"_index":507,"title":{},"body":{"components/ProfileComponent.html":{}}}],["settimeout(()=>{this.newroomevent.emit",{"_index":261,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["setupsocketconnection",{"_index":197,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["setupsocketconnection(roomname",{"_index":222,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["setupsocketconnection(roomname?:string",{"_index":325,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["shadow",{"_index":373,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["show",{"_index":358,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/ProfileComponent.html":{},"components/TesztComponent.html":{}}}],["showmessages",{"_index":198,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["showmessages(roomname",{"_index":225,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["showmessages(roomname:string",{"_index":345,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["showmymessage",{"_index":199,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["showmymessage(data",{"_index":227,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["showorhide",{"_index":200,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["showothersmessage",{"_index":201,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["showothersmessage(data",{"_index":231,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["size:20px",{"_index":566,"title":{},"body":{"components/ProfileComponent.html":{}}}],["size:32px",{"_index":543,"title":{},"body":{"components/ProfileComponent.html":{}}}],["socket",{"_index":190,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["socket.io",{"_index":244,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"dependencies.html":{}}}],["socket_endpoint",{"_index":191,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["socketid",{"_index":482,"title":{},"body":{"components/ProfileComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["src/.../environment.prod.ts",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/chat",{"_index":181,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":418,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:13",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":425,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/profile/profile.component.ts",{"_index":455,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts:13",{"_index":489,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:14",{"_index":490,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:15",{"_index":498,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:16",{"_index":503,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:17",{"_index":495,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:18",{"_index":491,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:19",{"_index":501,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:20",{"_index":500,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:21",{"_index":502,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:22",{"_index":496,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:23",{"_index":474,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:29",{"_index":487,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:33",{"_index":488,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:39",{"_index":483,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:45",{"_index":475,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:50",{"_index":486,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:55",{"_index":485,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:59",{"_index":481,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:65",{"_index":479,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:71",{"_index":477,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/registration/registration.component.ts",{"_index":568,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/registration/registration.component.ts:14",{"_index":577,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:17",{"_index":572,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:22",{"_index":573,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:25",{"_index":574,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:28",{"_index":576,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/teszt/teszt.component.ts",{"_index":585,"title":{},"body":{"components/TesztComponent.html":{},"coverage.html":{}}}],["src/app/components/teszt/teszt.component.ts:12",{"_index":589,"title":{},"body":{"components/TesztComponent.html":{}}}],["src/app/components/teszt/teszt.component.ts:8",{"_index":588,"title":{},"body":{"components/TesztComponent.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:11",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:17",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:21",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:25",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:29",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:33",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/token",{"_index":598,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stars",{"_index":530,"title":{},"body":{"components/ProfileComponent.html":{}}}],["started",{"_index":662,"title":{"index.html":{}},"body":{}}],["statements",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/ProfileComponent.html":{}}}],["style",{"_index":377,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["styles",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["styleurls",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["subscribeupdate",{"_index":473,"title":{},"body":{"components/ProfileComponent.html":{}}}],["support",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":663,"title":{},"body":{"modules.html":{}}}],["table",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["templateurl",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["teszt",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["teszt.component.css",{"_index":586,"title":{},"body":{"components/TesztComponent.html":{}}}],["teszt.component.html",{"_index":587,"title":{},"body":{"components/TesztComponent.html":{}}}],["tesztcomponent",{"_index":102,"title":{"components/TesztComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{},"coverage.html":{},"overview.html":{}}}],["text",{"_index":248,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.apiservice.get('/chatmessage/'+roomname).topromise",{"_index":355,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.apiservice.get('/rooms').topromise().then(res",{"_index":508,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.apiservice.post('/login',{name,password}).topromise().then((result",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.post('/registration',{name,password,roles:[\"support\"]}).topromise",{"_index":583,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.apiservice.post('/users/'+this.name",{"_index":512,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.apiservice.put('/assistancerooms/'+roomname",{"_index":524,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.apiservice.put('/importantrooms/'+roomname",{"_index":520,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.apiservice.put('/rooms/'+socketid,{isactive:false}).topromise().then(param",{"_index":517,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.assistanceneeded",{"_index":523,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.available",{"_index":511,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.changeroomevent.emit(socketid",{"_index":516,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.changeroomevent.subscribe(event",{"_index":256,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.getroommessages(roomname",{"_index":348,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.getrooms",{"_index":504,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.http.delete(this.host",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(this.host",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.patch(this.host",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(this.host",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.put(this.host",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.important",{"_index":519,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.isshown",{"_index":338,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.login(this.loginform.value.username",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageinput",{"_index":269,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.newroomevent.emit",{"_index":266,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.newroomevent.subscribe(param",{"_index":506,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.registration(this.registrationform.value.name",{"_index":580,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationform.value.password",{"_index":581,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.rooms",{"_index":509,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.route.navigate(['/login",{"_index":515,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.route.navigate(['/profile",{"_index":443,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.setupsocketconnection",{"_index":255,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.setupsocketconnection(event",{"_index":259,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.showmessages(event",{"_index":260,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.showmymessage(data",{"_index":335,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.showmymessage(message.messages",{"_index":353,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.showothersmessage(data",{"_index":336,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.showothersmessage(message.messages",{"_index":352,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.socket",{"_index":251,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.socket.close",{"_index":258,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.socket.disconnect",{"_index":257,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.socket.emit('chatmessage",{"_index":268,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.socket.emit('joinroom",{"_index":327,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.socket.on(\"newroom",{"_index":263,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.socket.on('message",{"_index":333,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.subscribeupdate",{"_index":505,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updatenewroom",{"_index":253,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["this.username",{"_index":328,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time",{"_index":249,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.innerhtml",{"_index":292,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.background",{"_index":296,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.borderradius",{"_index":309,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.color",{"_index":298,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.fontsize",{"_index":299,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.left",{"_index":324,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.margin",{"_index":304,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.opacity",{"_index":306,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.padding",{"_index":301,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.position",{"_index":311,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.right",{"_index":313,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.textalign",{"_index":308,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["time.style.wordbreak",{"_index":314,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["title",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":615,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["tokeninterceptorservice",{"_index":120,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["tokenizedreq",{"_index":612,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["top",{"_index":391,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["top:14",{"_index":592,"title":{},"body":{"components/TesztComponent.html":{}}}],["top:15",{"_index":453,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["top:4",{"_index":559,"title":{},"body":{"components/ProfileComponent.html":{}}}],["top:60",{"_index":561,"title":{},"body":{"components/ProfileComponent.html":{}}}],["top:7",{"_index":565,"title":{},"body":{"components/ProfileComponent.html":{}}}],["top:70",{"_index":593,"title":{},"body":{"components/TesztComponent.html":{}}}],["top:75",{"_index":562,"title":{},"body":{"components/ProfileComponent.html":{}}}],["top:83",{"_index":594,"title":{},"body":{"components/TesztComponent.html":{}}}],["transition",{"_index":546,"title":{},"body":{"components/ProfileComponent.html":{}}}],["tree",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["true",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:none",{"_index":378,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["ui",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["updatenewroom",{"_index":202,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["useclass",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["username",{"_index":207,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators",{"_index":578,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["value",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["variable",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":672,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["viewchild",{"_index":242,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["void",{"_index":219,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{},"components/TesztComponent.html":{}}}],["white",{"_index":276,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["width",{"_index":402,"title":{},"body":{"components/ChatInboxComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["width:15px",{"_index":544,"title":{},"body":{"components/ProfileComponent.html":{}}}],["width:20",{"_index":454,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["width:300px",{"_index":363,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["word",{"_index":288,"title":{},"body":{"components/ChatInboxComponent.html":{},"interfaces/IMessage.html":{}}}],["yes",{"_index":224,"title":{},"body":{"components/ChatInboxComponent.html":{}}}],["zone.js",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                HOST\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                del\n                            \n                            \n                                get\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            del\n                        \n                        \n                    \n                \n            \n            \n                \ndel(endpoint)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endpoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(endpoint)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endpoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \npatch(endpoint, body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endpoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(endpoint, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endpoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(endpoint, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endpoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HOST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {ChatInboxComponent} from '../components/chat-inbox/chat-inbox.component';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  HOST = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  get(endpoint): Observable {\n    return this.http.get(this.HOST + endpoint);\n  }\n\n  post(endpoint, data): Observable {\n    return this.http.post(this.HOST + endpoint, data);\n  }\n\n  put(endpoint, data): Observable {\n    return this.http.put(this.HOST + endpoint, data);\n  }\n\n  del(endpoint): Observable {\n    return this.http.delete(this.HOST + endpoint);\n  }\n\n  patch(endpoint, body): Observable {\n    return this.http.patch(this.HOST + endpoint, body);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'support-chat-service-ui'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'support-chat-service-ui';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatInboxComponent', 'selector': 'app-chat-inbox'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'TesztComponent', 'selector': 'app-teszt'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatInboxComponent\n\nChatInboxComponent\n\nAppModule -->\n\nChatInboxComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nTesztComponent\n\nTesztComponent\n\nAppModule -->\n\nTesztComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChatInboxComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            TesztComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                        \n                            TokenInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ChatInboxComponent} from './components/chat-inbox/chat-inbox.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TesztComponent} from './components/teszt/teszt.component';\nimport {RegistrationComponent} from './components/registration/registration.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {ProfileComponent} from './components/profile/profile.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {ApiService} from './services/api.service';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport {TokenInterceptorService} from './services/token-interceptor.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatInboxComponent,\n    TesztComponent,\n    RegistrationComponent,\n    LoginComponent,\n    ProfileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatTableModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatInputModule,\n  ],\n  providers: [ApiService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {TesztComponent} from './components/teszt/teszt.component';\nimport {ChatInboxComponent} from './components/chat-inbox/chat-inbox.component';\nimport {RegistrationComponent} from './components/registration/registration.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {ProfileComponent} from './components/profile/profile.component';\n\nconst routes: Routes = [\n  {path: '', component: TesztComponent},\n  {path: 'client', component: TesztComponent},\n  {path: 'registration', component: RegistrationComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'profile', component: ProfileComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatInboxComponent.html":{"url":"components/ChatInboxComponent.html","title":"component - ChatInboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatInboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-inbox/chat-inbox.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-inbox\n            \n\n            \n                styleUrls\n                ./chat-inbox.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chat-inbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isShown\n                            \n                            \n                                messageInput\n                            \n                            \n                                socket\n                            \n                            \n                                SOCKET_ENDPOINT\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRoomMessages\n                            \n                            \n                                leave\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                SendMessage\n                            \n                            \n                                setupSocketConnection\n                            \n                            \n                                    Async\n                                showMessages\n                            \n                            \n                                showMyMessage\n                            \n                            \n                                showOrHide\n                            \n                            \n                                showOthersMessage\n                            \n                            \n                                updateNewRoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                changeRoomEvent\n                            \n                            \n                                isSupport\n                            \n                            \n                                newRoomEvent\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-inbox/chat-inbox.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        changeRoomEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSupport\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        newRoomEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Default value : \"support\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRoomMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomMessages(roomName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            leave\n                        \n                        \n                    \n                \n            \n            \n                \nleave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nSendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupSocketConnection\n                        \n                        \n                    \n                \n            \n            \n                \nsetupSocketConnection(roomName?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showMessages(roomName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMyMessage\n                        \n                        \n                    \n                \n            \n            \n                \nshowMyMessage(data: IMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showOrHide\n                        \n                        \n                    \n                \n            \n            \n                \nshowOrHide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showOthersMessage\n                        \n                        \n                    \n                \n            \n            \n                \nshowOthersMessage(data: IMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateNewRoom\n                        \n                        \n                    \n                \n            \n            \n                \nupdateNewRoom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isShown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:163\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageInput\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socket\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SOCKET_ENDPOINT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'localhost:3000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-inbox/chat-inbox.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\nimport {io} from 'socket.io-client';\nimport {dashCaseToCamelCase} from '@angular/compiler/src/util';\nimport {ApiService} from '../../services/api.service';\n\n\nexport interface IMessage {\n  username: string,\n  text: string,\n  time?: Date\n}\n\n@Component({\n  selector: 'app-chat-inbox',\n  templateUrl: './chat-inbox.component.html',\n  styleUrls: ['./chat-inbox.component.css']\n})\n\nexport class ChatInboxComponent implements OnInit {\n  SOCKET_ENDPOINT = 'localhost:3000';\n  socket;\n  messageInput;\n\n  @Input()\n  changeRoomEvent : EventEmitter\n\n  @Input()\n  newRoomEvent: EventEmitter\n\n  @Input()\n  username = \"support\";\n\n  @Input()\n  isSupport = false;\n\n  constructor(private apiService: ApiService) {\n  }\n\n  ngOnInit(): void {\n    this.socket = io(this.SOCKET_ENDPOINT);\n    this.updateNewRoom();\n    if(!this.isSupport){\n      this.setupSocketConnection();\n    }else{\n      this.changeRoomEvent.subscribe(event=>{\n        this.socket.disconnect();\n        this.socket.close();\n        this.socket = io(this.SOCKET_ENDPOINT);\n        this.setupSocketConnection(event);\n        this.showMessages(event);\n        this.updateNewRoom();\n        setTimeout(()=>{this.newRoomEvent.emit()}, 100)\n      });\n    }\n\n  }\n\n  updateNewRoom(){\n    this.socket.on(\"newRoom\", param=>{\n      if(this.isSupport){\n        this.newRoomEvent.emit();\n      }\n    })\n  }\n\n  SendMessage() {\n    if(this.messageInput != \"\")\n    {\n      this.socket.emit('chatMessage', this.messageInput);\n      this.messageInput = '';\n    }\n  }\n\n  showMyMessage(data: IMessage){\n    const element = document.createElement('li');\n    element.innerHTML =  data.text;\n    element.style.background = '#0F5298';\n    element.style.color = \"white\";\n    element.style.padding =  '15px 30px';\n    element.style.margin = '10px';\n    element.style.textAlign = 'right';\n    element.style.borderRadius = \"10px\";\n    element.style.float =\"right\";\n    element.style.wordBreak = \"break-word\";\n    const time = document.createElement('div');\n    element.addEventListener(\"mouseenter\", function(event){\n\n      time.innerHTML = new Date(data.time).getHours().toString()+\":\"+new Date(data.time).getMinutes().toString();\n      time.style.background = '#b0b0b0';\n      time.style.color = \"white\";\n      time.style.fontSize = \"12px\";\n      time.style.padding =  '3px 8px';\n      time.style.margin = '13px';\n      time.style.opacity = \"0.8\";\n      time.style.textAlign = 'right';\n      time.style.borderRadius = \"0px 0px 10px 10px\";\n      time.style.position = \"absolute\";\n      time.style.right = \"0px\";\n      time.style.wordBreak = \"break-word\";\n      element.appendChild(time);\n    },false);\n\n    element.addEventListener(\"mouseout\", function( event ) {\n      element.removeChild(time);\n\n    }, false);\n\n    document.getElementById('message-list').appendChild(element);\n  }\n\n  showOthersMessage(data: IMessage){\n    const element = document.createElement('li');\n    element.innerHTML = data.text;\n    element.style.background = \"#E8E8E8\";\n    element.style.padding =  '15px 30px';\n    element.style.margin = '10px';\n    element.style.borderRadius = \"10px\";\n    element.style.textAlign = 'left';\n    element.style.float =\"left\";\n    element.style.wordBreak = \"break-word\";\n    const time = document.createElement('div');\n    element.addEventListener(\"mouseenter\", function(event){\n\n      time.innerHTML = new Date(data.time).getHours().toString()+\":\"+new Date(data.time).getMinutes().toString();\n      time.style.background = '#b0b0b0';\n      time.style.color = \"white\";\n      time.style.fontSize = \"12px\";\n      time.style.padding =  '3px 8px';\n      time.style.margin = '10px';\n      time.style.opacity = \"0.8\";\n      time.style.textAlign = 'left';\n      time.style.borderRadius = \"0px 0px 10px 10px\";\n      time.style.position = \"absolute\";\n      time.style.left = \"0px\";\n      time.style.wordBreak = \"break-word\";\n      element.appendChild(time);\n    },false);\n\n    element.addEventListener(\"mouseout\", function( event ) {\n      element.removeChild(time);\n\n    }, false);\n    document.getElementById('message-list').appendChild(element);\n  }\n\n  setupSocketConnection(roomName?:string) {\n    document.getElementById('message-list').innerHTML = \"\";\n\n    if(this.isSupport){\n      this.socket.emit('joinRoom', { username: this.username, room: roomName , isSupport:this.isSupport,supportId: localStorage.getItem(\"supportId\")});\n    }else{\n      this.socket.emit('joinRoom', { username: this.username , isSupport:this.isSupport});\n    }\n    this.socket.on('message', (data: IMessage) => {\n      if (this.username == data.username) {\n        this.showMyMessage(data)\n      }else {\n        this.showOthersMessage(data);\n      }\n    });\n  }\n\n  isShown:boolean = false;\n  showOrHide() {\n    this.isShown = !this.isShown;\n    if(this.isShown){\n      [].forEach.call(document.querySelectorAll('.chat-messages'), function (el) {\n        el.style.display = 'none';\n      });\n    }else{\n      [].forEach.call(document.querySelectorAll('.chat-messages'), function (el) {\n        el.style.display = '';\n      });\n    }\n  }\n\n    leave(){\n      this.socket.disconnect();\n    }\n\n  async showMessages(roomName:string){\n    const messages:any[] = await this.getRoomMessages(roomName) || [];\n    messages.forEach((message)=>{\n      if(message.messages.username == \"guest\"){\n        this.showOthersMessage(message.messages)\n      }else{\n        this.showMyMessage(message.messages)\n      }\n    })\n  }\n\n  async getRoomMessages(roomName:string){\n    return await this.apiService.get('/chatmessage/'+roomName).toPromise();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n      send\n    \n  \n  \n    chat_bubble_outline\n  \n\n\n\n    \n\n    \n                \n                    ./chat-inbox.component.css\n                \n                .chat-messages-show-container{\n  border-radius: 10px 10px 0px 0px;\n  background: white;\n  width:300px;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  box-shadow: 0px 0px 6px #B2B2B2;\n}\n\n.chat-messages-show-list {\n  list-style-type:none;\n  margin: 0;\n  padding: 0;\n}\n\n.chat-messages-create-container{\n  box-shadow: 0px 0px 6px #B2B2B2;\n  border-radius: 0px 0px 10px 10px;\n  background: white;\n  width:300px;\n  height: 70px;\n  display: flex;\n  justify-content: center;\n}\n.chat-messages-create-input {\n  padding-left:15px;\n  outline: none;\n  border: none;\n  flex:2\n}\n.chat-messages-create-button {\n  padding-right: 15px;\n  padding-top: 25px;\n  color:#0F5298;\n  cursor:pointer;\n  height: 50px;\n  margin: auto 10px;\n}\n\n.chat-messages{\n  width:300px;\n}\n\n.hide-show-chat{\n  background-color: #0d47a1;\n  color:white;\n  padding-bottom: 2px;\n  width: 50px;\n  height: 40px;\n  border-radius: 20px 20px 20px 20px;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  cursor: pointer;\n\n}\n.hide-show-chat:hover{\nbox-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.2);\n}\n\n.chat-icon-around{\n  padding-top: 10px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      send            chat_bubble_outline  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatInboxComponent', 'selector': 'app-chat-inbox'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'TesztComponent', 'selector': 'app-teszt'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatInboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/chat-inbox/chat-inbox.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                                \n                                            Optional\n                                        time\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, ElementRef, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\nimport {io} from 'socket.io-client';\nimport {dashCaseToCamelCase} from '@angular/compiler/src/util';\nimport {ApiService} from '../../services/api.service';\n\n\nexport interface IMessage {\n  username: string,\n  text: string,\n  time?: Date\n}\n\n@Component({\n  selector: 'app-chat-inbox',\n  templateUrl: './chat-inbox.component.html',\n  styleUrls: ['./chat-inbox.component.css']\n})\n\nexport class ChatInboxComponent implements OnInit {\n  SOCKET_ENDPOINT = 'localhost:3000';\n  socket;\n  messageInput;\n\n  @Input()\n  changeRoomEvent : EventEmitter\n\n  @Input()\n  newRoomEvent: EventEmitter\n\n  @Input()\n  username = \"support\";\n\n  @Input()\n  isSupport = false;\n\n  constructor(private apiService: ApiService) {\n  }\n\n  ngOnInit(): void {\n    this.socket = io(this.SOCKET_ENDPOINT);\n    this.updateNewRoom();\n    if(!this.isSupport){\n      this.setupSocketConnection();\n    }else{\n      this.changeRoomEvent.subscribe(event=>{\n        this.socket.disconnect();\n        this.socket.close();\n        this.socket = io(this.SOCKET_ENDPOINT);\n        this.setupSocketConnection(event);\n        this.showMessages(event);\n        this.updateNewRoom();\n        setTimeout(()=>{this.newRoomEvent.emit()}, 100)\n      });\n    }\n\n  }\n\n  updateNewRoom(){\n    this.socket.on(\"newRoom\", param=>{\n      if(this.isSupport){\n        this.newRoomEvent.emit();\n      }\n    })\n  }\n\n  SendMessage() {\n    if(this.messageInput != \"\")\n    {\n      this.socket.emit('chatMessage', this.messageInput);\n      this.messageInput = '';\n    }\n  }\n\n  showMyMessage(data: IMessage){\n    const element = document.createElement('li');\n    element.innerHTML =  data.text;\n    element.style.background = '#0F5298';\n    element.style.color = \"white\";\n    element.style.padding =  '15px 30px';\n    element.style.margin = '10px';\n    element.style.textAlign = 'right';\n    element.style.borderRadius = \"10px\";\n    element.style.float =\"right\";\n    element.style.wordBreak = \"break-word\";\n    const time = document.createElement('div');\n    element.addEventListener(\"mouseenter\", function(event){\n\n      time.innerHTML = new Date(data.time).getHours().toString()+\":\"+new Date(data.time).getMinutes().toString();\n      time.style.background = '#b0b0b0';\n      time.style.color = \"white\";\n      time.style.fontSize = \"12px\";\n      time.style.padding =  '3px 8px';\n      time.style.margin = '13px';\n      time.style.opacity = \"0.8\";\n      time.style.textAlign = 'right';\n      time.style.borderRadius = \"0px 0px 10px 10px\";\n      time.style.position = \"absolute\";\n      time.style.right = \"0px\";\n      time.style.wordBreak = \"break-word\";\n      element.appendChild(time);\n    },false);\n\n    element.addEventListener(\"mouseout\", function( event ) {\n      element.removeChild(time);\n\n    }, false);\n\n    document.getElementById('message-list').appendChild(element);\n  }\n\n  showOthersMessage(data: IMessage){\n    const element = document.createElement('li');\n    element.innerHTML = data.text;\n    element.style.background = \"#E8E8E8\";\n    element.style.padding =  '15px 30px';\n    element.style.margin = '10px';\n    element.style.borderRadius = \"10px\";\n    element.style.textAlign = 'left';\n    element.style.float =\"left\";\n    element.style.wordBreak = \"break-word\";\n    const time = document.createElement('div');\n    element.addEventListener(\"mouseenter\", function(event){\n\n      time.innerHTML = new Date(data.time).getHours().toString()+\":\"+new Date(data.time).getMinutes().toString();\n      time.style.background = '#b0b0b0';\n      time.style.color = \"white\";\n      time.style.fontSize = \"12px\";\n      time.style.padding =  '3px 8px';\n      time.style.margin = '10px';\n      time.style.opacity = \"0.8\";\n      time.style.textAlign = 'left';\n      time.style.borderRadius = \"0px 0px 10px 10px\";\n      time.style.position = \"absolute\";\n      time.style.left = \"0px\";\n      time.style.wordBreak = \"break-word\";\n      element.appendChild(time);\n    },false);\n\n    element.addEventListener(\"mouseout\", function( event ) {\n      element.removeChild(time);\n\n    }, false);\n    document.getElementById('message-list').appendChild(element);\n  }\n\n  setupSocketConnection(roomName?:string) {\n    document.getElementById('message-list').innerHTML = \"\";\n\n    if(this.isSupport){\n      this.socket.emit('joinRoom', { username: this.username, room: roomName , isSupport:this.isSupport,supportId: localStorage.getItem(\"supportId\")});\n    }else{\n      this.socket.emit('joinRoom', { username: this.username , isSupport:this.isSupport});\n    }\n    this.socket.on('message', (data: IMessage) => {\n      if (this.username == data.username) {\n        this.showMyMessage(data)\n      }else {\n        this.showOthersMessage(data);\n      }\n    });\n  }\n\n  isShown:boolean = false;\n  showOrHide() {\n    this.isShown = !this.isShown;\n    if(this.isShown){\n      [].forEach.call(document.querySelectorAll('.chat-messages'), function (el) {\n        el.style.display = 'none';\n      });\n    }else{\n      [].forEach.call(document.querySelectorAll('.chat-messages'), function (el) {\n        el.style.display = '';\n      });\n    }\n  }\n\n    leave(){\n      this.socket.disconnect();\n    }\n\n  async showMessages(roomName:string){\n    const messages:any[] = await this.getRoomMessages(roomName) || [];\n    messages.forEach((message)=>{\n      if(message.messages.username == \"guest\"){\n        this.showOthersMessage(message.messages)\n      }else{\n        this.showMyMessage(message.messages)\n      }\n    })\n  }\n\n  async getRoomMessages(roomName:string){\n    return await this.apiService.get('/chatmessage/'+roomName).toPromise();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(name, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ApiService} from '../../services/api.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  });\n\n  constructor(private apiService: ApiService, private route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onSubmit() {\n    this.login(this.loginForm.value.username, this.loginForm.value.password);\n\n  }\n  async login(name,password){\n    await this.apiService.post('/login',{name,password}).toPromise().then((result)=>{\n      if(result?.token){\n\n        localStorage.setItem(\"token\",result?.token);\n        localStorage.setItem(\"supportId\",result?.supportId);\n        this.route.navigate(['/profile'])\n      }\n      console.log(result)\n    });\n\n  }\n\n\n}\n\n    \n\n    \n        Back\n\n  Login\n  \n    \n      \n        Username\n        \n      \n      \n      \n      Password\n        \n      \n    \n    LOGIN\n  \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .full-width {\n  width: 70%;\n}\n\n.my-card{\n  text-align:center;\n  justify-content:center;\n  margin-left:auto;\n  margin-right:auto;\n  margin-top:15%;\n  width:20%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Back  Login                    Username                                Password                      LOGIN  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatInboxComponent', 'selector': 'app-chat-inbox'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'TesztComponent', 'selector': 'app-teszt'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                assistanceNeeded\n                            \n                            \n                                available\n                            \n                            \n                                changeRoomEvent\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                important\n                            \n                            \n                                name\n                            \n                            \n                                newMessage\n                            \n                            \n                                newRoomEvent\n                            \n                            \n                                participants\n                            \n                            \n                                rooms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeActivation\n                            \n                            \n                                    Async\n                                changeAssistanceStatus\n                            \n                            \n                                    Async\n                                changeStatus\n                            \n                            \n                                closeRoom\n                            \n                            \n                                getRooms\n                            \n                            \n                                    Async\n                                joinRoom\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                subscribeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile/profile.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeActivation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeAssistanceStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAssistanceStatus(roomName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStatus(roomName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeRoom\n                        \n                        \n                    \n                \n            \n            \n                \ncloseRoom(socketId: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socketId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRooms\n                        \n                        \n                    \n                \n            \n            \n                \ngetRooms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            joinRoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    joinRoom(socketId: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socketId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribeUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribeUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile/profile.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"activate\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assistanceNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            available\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRoomEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['name','newMessages','participants','important','helpNeeded', 'createdAt', 'Action1','Action2']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            important\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"asd123\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoomEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            participants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/profile/profile.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit} from '@angular/core';\nimport {ApiService} from '../../services/api.service';\nimport {Router} from '@angular/router';\nimport {IMessage} from '../chat-inbox/chat-inbox.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  activate = \"activate\";\n  available = true;\n  name= \"asd123\";\n  rooms = [];\n  displayedColumns: string[] = ['name','newMessages','participants','important','helpNeeded', 'createdAt', 'Action1','Action2'];\n  changeRoomEvent : EventEmitter = new EventEmitter();\n  newRoomEvent : EventEmitter = new EventEmitter();\n  newMessage: number;\n  participants: number;\n  important = false;\n  assistanceNeeded = false;\n\n  constructor(private apiService: ApiService,  private route: Router) {\n    this.getRooms();\n  }\n\n  ngOnInit(): void {\n    this.subscribeUpdate();\n  }\n\n  subscribeUpdate(){\n    this.newRoomEvent.subscribe(param=>{\n      setTimeout(()=>{this.getRooms()},100);\n    })\n  }\n\n  getRooms(){\n    this.apiService.get('/rooms').toPromise().then(res=>{\n      this.rooms = res;\n    })\n  }\n\n  async changeActivation() {\n    this.available = !this.available\n    await this.apiService.post('/users/'+this.name, {isAvailable:this.available}).toPromise();\n  }\n\n  logout() {\n    localStorage.setItem(\"token\",\"\");\n    this.route.navigate(['/login'])\n  }\n\n  async joinRoom(socketId: any) {\n    this.changeRoomEvent.emit(socketId);\n  }\n\n  closeRoom(socketId: any) {\n    this.apiService.put('/rooms/'+socketId,{isActive:false}).toPromise().then(param=>{\n      this.getRooms();\n    });\n  }\n\n  async changeStatus(roomName:string){\n    this.important = !this.important\n    await this.apiService.put('/importantRooms/'+roomName, {isImportant:this.important}).toPromise();\n    this.getRooms();\n  }\n\n  async changeAssistanceStatus(roomName:string){\n    this.assistanceNeeded = !this.assistanceNeeded\n    await this.apiService.put('/assistanceRooms/'+roomName, {assistanceNeeded:this.assistanceNeeded}).toPromise();\n    this.getRooms();\n  }\n\n\n}\n\n    \n\n    \n        \n\n  \n     Room Name \n     {{element.name}}\n  \n\n  \n     Message(s) \n     {{element.newMessages}}\n  \n\n  \n     Participants \n     {{element.participants}}/\n  \n\n  \n     Important \n    \n      stars\n  \n\n  \n     Assistance \n    contact_support\n  \n\n  \n     Created at \n     {{element.createdAt | date:'short'}} \n  \n\n\n  \n     \n    \n      Join\n\n    \n  \n\n  \n     \n    \n      delete_forever\n    \n  \n\n  \n  \n\n\n\n\n\n\nLogout\n\n    \n\n    \n                \n                    ./profile.component.css\n                \n                .myTable{\n  margin:25px;\n  width: 55%;\n  text-align: center !important;\n}\n\n#deleteIcon{\n font-size:32px;\n  width:15px;\n}\n\n#deleteIcon:hover{\n  cursor: pointer;\n  transition: color 0.3s ease;\n  color:red;\n}\n\n#contactIcon:hover{\n  cursor:pointer;\n}\n\n#importantIcon:hover{\n  cursor:pointer;\n}\n\n.mat-header-cell {\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n}\n\n.mat-cell {\n  text-align: center;\n  justify-content:center;\n}\n\n:host ::ng-deep app-chat-inbox .chat-messages-show-container{\n  position: fixed;\n  top:4%;\n  right:20%;\n}\n:host ::ng-deep app-chat-inbox .chat-messages-create-container{\n  position: fixed;\n  top:60%;\n  right:20%;\n}\n\n:host ::ng-deep app-chat-inbox .hide-show-chat{\n  position: fixed;\n  right:20%;\n  top:75%;\n}\n\n#logoutBtn{\n  position: absolute;\n  right:7%;\n  top:7%;\n  font-size:20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Room Name      {{element.name}}         Message(s)      {{element.newMessages}}         Participants      {{element.participants}}/         Important           stars         Assistance     contact_support         Created at      {{element.createdAt | date:\\'short\\'}}                    Join                       delete_forever          Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatInboxComponent', 'selector': 'app-chat-inbox'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'TesztComponent', 'selector': 'app-teszt'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registration/registration.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                registration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registration/registration.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registration(name, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    name: new FormControl(''),\n    password: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/registration/registration.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ApiService} from '../../services/api.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  registrationForm = new FormGroup({\n    name: new FormControl(''),\n    password: new FormControl('')\n  });\n\n  constructor(private apiService: ApiService,private route: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.registration(this.registrationForm.value.name, this.registrationForm.value.password);\n  }\n  async registration(name,password){\n    await this.apiService.post('/registration',{name,password,roles:[\"support\"]}).toPromise();\n    this.route.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \nBack\n  \n  Registration\n  \n    \n      \n        Username\n        \n      \n    \n      \n        Password\n        \n      \n    \n    REGISTER\n    \n  \n\n\n\n    \n\n    \n                \n                    ./registration.component.css\n                \n                .full-width {\n  width: 70%;\n}\n\n.my-card{\n  text-align:center;\n  justify-content:center;\n  margin-left:auto;\n  margin-right:auto;\n  margin-top:15%;\n  width:20%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Back    Registration                    Username                                Password                      REGISTER      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatInboxComponent', 'selector': 'app-chat-inbox'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'TesztComponent', 'selector': 'app-teszt'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TesztComponent.html":{"url":"components/TesztComponent.html","title":"component - TesztComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TesztComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teszt/teszt.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teszt\n            \n\n            \n                styleUrls\n                ./teszt.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teszt.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teszt/teszt.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teszt/teszt.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teszt',\n  templateUrl: './teszt.component.html',\n  styleUrls: ['./teszt.component.css']\n})\nexport class TesztComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\nLogin\nRegistration\n\n    \n\n    \n                \n                    ./teszt.component.css\n                \n                :host ::ng-deep app-chat-inbox .chat-messages-show-container{\n  position: absolute;\n  margin:auto;\n  right:45%;\n  top:14%;\n}\n\n:host ::ng-deep app-chat-inbox .chat-messages-create-container{\n  position: absolute;\n  top:70%;\n  right:45%;\n\n}\n\n:host ::ng-deep app-chat-inbox .hide-show-chat{\n  position: absolute;\n  top:83%;\n  right:45%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'LoginRegistration'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatInboxComponent', 'selector': 'app-chat-inbox'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'TesztComponent', 'selector': 'app-teszt'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TesztComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptorService.html":{"url":"interceptors/TokenInterceptorService.html","title":"interceptor - TokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/token-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/token-interceptor.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/token-interceptor.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http'\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor(private injector: Injector) { }\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        token: 'Bearer ' + localStorage.getItem(\"token\")\n      }\n    });\n\n    return next.handle(tokenizedReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/chat-inbox/chat-inbox.component.ts\n            \n            component\n            ChatInboxComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/chat-inbox/chat-inbox.component.ts\n            \n            interface\n            IMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/components/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/teszt/teszt.component.ts\n            \n            component\n            TesztComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/token-interceptor.service.ts\n            \n            interceptor\n            TokenInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.5\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ~10.2.0\n        \n            @angular/compiler : ~10.2.0\n        \n            @angular/core : ~10.2.0\n        \n            @angular/forms : ~10.2.0\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ~10.2.0\n        \n            @angular/platform-browser-dynamic : ~10.2.0\n        \n            @angular/router : ~10.2.0\n        \n            @nebular/eva-icons : ^6.2.2\n        \n            @nebular/theme : ^6.2.2\n        \n            cors : ^2.8.5\n        \n            eva-icons : ^1.1.3\n        \n            rxjs : ~6.6.0\n        \n            socket.io : ^4.0.1\n        \n            socket.io-client : ^4.0.1\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nsupport-chat-service-ui\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatInboxComponent\n\nChatInboxComponent\n\nAppModule -->\n\nChatInboxComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nTesztComponent\n\nTesztComponent\n\nAppModule -->\n\nTesztComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
